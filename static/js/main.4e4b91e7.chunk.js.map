{"version":3,"sources":["ToggleContext.js","Toggle.js","App.js","index.js"],"names":["ToggleContext","createContext","Toggle","name","useContext","activeArr","setActiveArr","className","includes","onClick","old","filter","e","newArr","length","App","useState","Provider","value","rootElement","document","getElementById","createRoot","render"],"mappings":"2JAIeA,EAFOC,wBAAc,CAAC,GAAI,WAAQ,I,OCsClCC,MArCf,YAA2B,IAATC,EAAQ,EAARA,KAChB,EAAkCC,qBAAWJ,GAA7C,mBAAOK,EAAP,KAAkBC,EAAlB,KAwBA,OACE,sBACEC,UAAS,UAAKJ,EAAL,mBAAoBE,EAAUG,SAASL,GAAQ,SAAW,IADrE,UAGE,qBAAKI,UAAU,SAAf,SACE,wBAAQA,UAAU,OAAOE,QA5B/B,WACMJ,EAAUG,SAASL,GACrBG,GAAa,SAACI,GAAD,OAASA,EAAIC,QAAO,SAACC,GAAD,OAAOA,IAAMT,CAAb,GAApB,IAEbG,GAAa,SAACI,GACZ,IAAIG,EAAM,YAAOH,GAcjB,OAbqB,GAAjBG,EAAOC,SACI,SAATX,EACFU,EAASA,EAAOF,QAAO,SAACC,GAAD,MAAa,UAANA,CAAP,IAEX,SAART,EACFU,EAASA,EAAOF,QAAO,SAACC,GAAD,MAAa,SAANA,CAAP,IAEV,SAATT,IACFU,EAASA,EAAOF,QAAO,SAACC,GAAD,MAAa,SAANA,CAAP,MAKzB,GAAN,mBAAWC,GAAX,CAAmBV,GACpB,GAEJ,MAQG,+BAAOA,MAGZ,ECrBcY,G,MAZH,WACV,IAAMV,EAAYW,mBAAS,IAC3B,OACE,qBAAKT,UAAU,MAAf,SACE,eAAC,EAAcU,SAAf,CAAwBC,MAAOb,EAA/B,UACE,cAAC,EAAD,CAAQF,KAAK,SACb,cAAC,EAAD,CAAQA,KAAK,SACb,cAAC,EAAD,CAAQA,KAAK,cAIpB,GCXKgB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,M","file":"static/js/main.4e4b91e7.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ToggleContext = createContext([[], () => {}]);\r\n\r\nexport default ToggleContext;\r\n","import React, { useContext } from \"react\";\r\nimport ToggleContext from \"./ToggleContext\";\r\n\r\nfunction Toggle({ name }) {\r\n  const [activeArr, setActiveArr] = useContext(ToggleContext);\r\n  function handleClick() {\r\n    if (activeArr.includes(name)) {\r\n      setActiveArr((old) => old.filter((e) => e !== name));\r\n    } else {\r\n      setActiveArr((old) => {\r\n        let newArr = [...old];\r\n        if (newArr.length == 2) {\r\n          if (name === \"GOOD\") {\r\n            newArr = newArr.filter((e) => e !== \"CHEAP\");\r\n          } else {\r\n            if (name == \"CHEAP\") {\r\n              newArr = newArr.filter((e) => e !== \"FAST\");\r\n            } else {\r\n              if (name === \"FAST\") {\r\n                newArr = newArr.filter((e) => e !== \"GOOD\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return [...newArr, name];\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={`${name} toggle ${activeArr.includes(name) ? \"active\" : \"\"}`}\r\n    >\r\n      <div className=\"slider\">\r\n        <button className=\"ball\" onClick={handleClick}></button>\r\n      </div>\r\n      <span>{name}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { useState } from \"react\";\n// import ReactDOM from \"react-dom\";\nimport Toggle from \"./Toggle\";\nimport \"./styles.css\";\nimport ToggleContext from \"./ToggleContext\";\nconst App = () => {\n  const activeArr = useState([]);\n  return (\n    <div className=\"app\">\n      <ToggleContext.Provider value={activeArr}>\n        <Toggle name=\"GOOD\" />\n        <Toggle name=\"FAST\" />\n        <Toggle name=\"CHEAP\" />\n      </ToggleContext.Provider>\n    </div>\n  );\n};\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}